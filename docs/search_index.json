[["index.html", "Data Science Project Guide: Honey and Bees 1 Welcome!", " Data Science Project Guide: Honey and Bees TechAcademy e.V. Summer Term 2022 1 Welcome! "],["whats-data-science-and-how-do-i-do-it.html", "2 Whats Data Science and How Do I Do It? 2.1 Whats R? 2.2 Whats Python? 2.3 Your Data Science Project", " 2 Whats Data Science and How Do I Do It? 2.1 Whats R? R is a programming language developed by statisticians in the early 90s to calculate and visualize statistical results. A lot has happened since then, and by now, R is one of the most widely used programming languages in Data Science. You dont have to compile your R code, but you can use it interactively and dynamically. Such an approach makes it possible to quickly gain basic knowledge about existing data and display it graphically. R offers much more than just programming. The language provides a complete ecosystem for solving statistical problems. A large number of packages and interfaces are available, which you can use to expand the basic functionality of the programing language to, say, create a COVID-Tracker application. 2.1.1 RStudio Cloud Before you can use R, you usually have to install some separate programs locally on your computer. Typically, you first install a raw version of R. In theory, you can then start programming. However, it is challenging to carry out an entire project with a raw version of R. Thats why there is RStudio, a free Integrated Development Environment (IDE) for R. Such IDE includes many essential features that simplify programming with R. Among other things, an auto-completion of your code, a friendly user interface, and many expansion options. Think of R as your cars engine. And think of RStudio as your cars dashboard that shows fancy metrics, has a radio and allows you to adjust air-conditioning! Experience has shown that installing R and RStudio locally on your computer takes some effort. Fortunately, RStudio also has a cloud solution that eliminates these steps: RStudio Cloud. You can edit your project in the same IDE in the browser without any prior installations on your computer. You can also easily switch your project from a private to a public project and give your team an insight into your code via a link or by giving them access to the workspace directly. In this way, you can easily exchange ideas with your team. We will introduce RStudio Cloud and unlock access to our workspace on our first Coding Meetup. Until then, focus on learning the hard skills of programming with the courses on DataCamp. That brings us to your curriculum in the next section! 2.1.2 Curriculum The following list shows the required DataCamp courses for the Data Science with R Track at TechAcademy. As a beginner, please stick to the courses of the beginner program. Ambitious beginners can, of course, take the advanced courses afterward. However, it would be best if you worked through the courses in the order we listed them. The same applies to the advanced courses. Here, too, you should finish the specified courses in the given order. Since it can, of course, happen that you have already mastered the topics of an advanced course, you can replace some courses. If you are convinced that the course does not add value to you, feel free to replace it with one of the courses in the Exchange Pool (see list below). However, you should not pursue an exchange course until you finish all chapters from the advanced course: Intermediate R. To receive the certificate, both beginners and advanced learners must complete at least two-thirds of the curriculum (6/9 courses). For the beginners, this means until  and including  the course Data Visualization with ggplot2 (Part 1) and for the advanced until and including  Supervised Learning in R: Classification. In addition, you should complete at least two-thirds of the project tasks. After completing the curriculum and the projects (minimal) requirements, you will receive your TechAcademy certificate! R Fundamentals (Beginner Track) Introduction to R (4h) Intermediate R (6h) Introduction to Importing Data in R (3h) Cleaning Data in R (4h) Data Manipulation with dplyr (4h) Data Visualization with ggplot2 (Part1) (5h) Exploratory Data Analysis in R (4h) Correlation and Regression in R (4h) Multiple and Logistic Regression in R (4h) Machine Learning Fundamentals in R (Advanced Track) Intermediate R (6h) Introduction to Importing Data in R (3h) Cleaning Data in R (4h) Importing &amp; Cleaning Data in R: Case Studies (4h) Data Visualization with ggplot2 (Part1) (5h) Supervised Learning in R: Classification (4h) Supervised learning in R: Regression (4h) Unsupervised Learning in R (4h) Machine Learning with caret in R (4h) Data Science R (Advanced Track)  Exchange Pool Data Visualization with ggplot2 (Part 2) (5h) Interactive Maps with leaflet in R (4h) Machine Learning in Tidyverse (5h) Writing Efficient R Code (4h) Support Vector Machines in R (4h) Supervised Learning in R: Case Studies (4h) Optimizing R Code with Rcpp (4h) 2.1.3 Helpful Links RStudio Cheat Sheets RMarkdown Explanation (to document your analyses) StackOverflow (forum for all kinds of coding questions) CrossValidated (Statistics and Data Science forum) 2.2 Whats Python? Python is a dynamic programming language. You can execute the code in the interpreter, so you do not have to compile the code first. This feature makes Python very easy and quick to use. The excellent usability, easy readability, and simple structuring were and still are core ideas in developing this programming language. You can use Python to program according to any paradigm, whereby structured and object-oriented programming is most straightforward due to the structure of the language. Still, functional or aspect-oriented programming is also possible. These options give users significant freedom to design projects the way they want and great space to write code that is difficult to understand and confusing. For this reason, programmers developed specific standards based on the so-called Python Enhancement Proposals (PEP) over the decades. 2.2.1 Anaconda and Jupyter Before you can use Python, you must install it on the computer. Python is already installed on Linux and Unix systems (such as macOS), but often it is an older version. Since there are differences in the handling of Python version 2  which is no longer supported  and version 3, we decided to work with version 3.6 or higher. One of the easiest ways to get Python and most of the best-known programming libraries is to install Anaconda. There are detailed explanations for installing all operating systems on the website of the provider. With Anaconda installed, all you have to do is open the Anaconda Navigator, and youre ready to go. There are two ways to get started: Spyder or Jupyter. Spyder is the integrated development environment (IDE) for Python and offers all possibilities from syntax highlighting to debugging (links to tutorials below). The other option is to use Jupyter or Jupyter notebooks. It is an internet technology-based interface for executing commands. The significant advantage of this is that you can quickly write shortcode pieces and try them out interactively without writing an entire executable program. Now you can get started! If you have not worked with Jupyter before, we recommend that you complete this DataCamp course first. There you will get to know many tips and tricks that will make your workflow with Jupyter much easier. To make your work and, above all, the collaboration more accessible, we are working with the Google Colab platform that contains a Jupyter environment with the necessary libraries. You can then import all the data required for the project with Google Drive. We will introduce this environment during our first Coding Meetup. Until then, focus on learning the hard skills of programming with your courses on DataCamp. This topic brings us to your curriculum in the next section! 2.2.2 Curriculum The following list shows the required DataCamp courses for the Data Science with Python Track at TechAcademy. As a beginner, please stick to the courses of the beginner program. Ambitious beginners can, of course, take the advanced courses afterward. However, it would be best if you worked through the courses in the order we listed them. The same applies to the advanced courses. Here, too, you should finish the specified courses in the given order. Since it can, of course, happen that you have already mastered the topics of an advanced course, you can replace some courses. If you are convinced that the course does not add value to you, feel free to replace it with one of the courses in the Exchange Pool (see list below). However, you should not pursue an exchange course until you finish all chapters from the advanced course: Intermediate Python. To receive the certificate, both beginners and advanced learners must complete at least two-thirds of the curriculum (6/9 courses). For the beginners, this means until  and including  the course Joining Data with pandas (4h) and for the advanced until and including  Exploratory Data Analysis in Phyton (4h). In addition, you should complete at least two-thirds of the project tasks. After completing the curriculum and the projects (minimal) requirements, you will receive your TechAcademy certificate! Python Fundamentals (Beginner Track) Introduction to Data Science in Python (4h) Intermediate Python (4h) Python for Data Science Toolbox (Part 1) (3h) Introduction to Data Visualization with Matplotlib (4h) Data Manipulation with pandas (4h) Joining Data with pandas (4h) Exploratory Data Analysis in Phyton (4h) Introduction to DataCamp Projects (2h) Introduction to Linear Modeling in Python (4h) Data Science with Python (Advanced Track) Intermediate Python (4h) Python Data Science Toolbox (Part 1) (3h) Python Data Science Toolbox (Part 2) (4h) Cleaning Data in Python (4h) Exploring the Bitcoin Cryptocurrency Market (3h) Exploratory Data Analysis in Phyton (4h) Introduction to Linear Modeling in Python (4h) Supervised Learning with Scikit-Learn (4h) Linear Classifiers in Python (4h) Data Science with Python (Advanced Track) - Exchange Pool TV, Halftime Shows and the Big Game (4h) Interactive Data Visualization with Bokeh (4h) Time Series Analysis (4h) Machine Learning for Time Series Data in Python (4h) Advanced Deep Learning with Keras (4h) Data Visualization with Seaborn (4h) Web Scraping in Python (4h) Writing Efficient Python Code (4h) Unsupervised Learning in Python (4h) Writing Efficient Code with pandas (4h) Introduction to Deep Learning in Python (4h) ARIMA Models in Python (4h) 2.2.3 Helpful Links Official Tutorials/Documentation: https://docs.python.org/3/tutorial/index.html https://jupyter.org/documentation Further Explanations: https://pythonprogramming.net/ https://automatetheboringstuff.com/ https://www.reddit.com/r/learnpython https://www.datacamp.com/community/tutorials/tutorial-jupyter-notebook 2.3 Your Data Science Project 2.3.1 Coding Meetups and Requirements "],["introduction-to-your-project.html", "3 Introduction to Your Project 3.1 Purpose of the Project Guide 3.2 What is this Project About? 3.3 Exploratory Data Analysis  Getting to Know the Data Set 3.4 Prediction  Apply Statistical Methods", " 3 Introduction to Your Project 3.1 Purpose of the Project Guide Welcome to the project guide for your TechAcademy data science project! This document will guide you through the different steps of your project and will provide you with useful hints along the way. However, it is not a detailed step by step manual, since we feel like it is important that you develop the skills of coming up with your own way of solving different tasks. This is a great way to apply the knowledge and tools you have acquired in Data Camp, as well as developing skills in researching code independently. Always remember, Google is the best tool in your kit! It might happen that you dont know how to solve a task. This is a normal part of the coding process, so dont worry. It is part of the learning experience and we provided you with helpful tips throughout this guide. We also included pictures of what your results could look like. They are meant to be a useful guidance so that you know what you are working towards. Your plots do not have to look the same way as ours do, just keep in mind which information is necessary for a meaningful plot. Furthermore, you can find helpful links in the introductory chapters, where your questions might already have been answered. If not, and in the unlikely case that even Google cannot help you, the TechAcademy mentors will help you via Slack or directly during the coding meetups. At the end of the project guide you will find an overview of all tasks that have to be completed, depending on your track (beginner/advanced). You can use this list to check which tasks still need to be completed and which tasks are relevant for your track. 3.2 What is this Project About? 3.3 Exploratory Data Analysis  Getting to Know the Data Set 3.4 Prediction  Apply Statistical Methods "],["exploratory-data-analysis.html", "4 Exploratory Data Analysis", " 4 Exploratory Data Analysis In your workspace on RStudio Cloud We recommend using Google Colab for this project since it requires no particular setup, stores its notebooks to your Google Drive, and makes it easy for you to share them with your team members. As an alternative to Google Colab, you might want to install Jupyter Notebook locally using the Anaconda distribution. We will give you a more detailed step-by-step demo during the first coding meetup. "],["prediction-application-of-statistical-methods.html", "5 Prediction  Application of Statistical Methods 5.1 Machine Learning Algorithms", " 5 Prediction  Application of Statistical Methods 5.1 Machine Learning Algorithms "],["exercise-checklist.html", "6 Exercise Checklist", " 6 Exercise Checklist This checklist should help you keep track of your exercises. Remember that you have to hand in satisfactory solutions to at least two-thirds of the exercises. If youre part of the beginner track, this refers to two-thirds of part A (EDA) only. If youre part of the advanced track, you have to hand in at least two-thirds of both individual parts A and B. Hence, you cannot hand in 100 percent of the first part and only 50 percent of the second one. Youll need more than 66% in each one for a certificate. After all, youre not that advanced if you only did half of it, right? Part 1: Exploratory Data Analysis (Beginner + Advanced Tracks) Part 2: Prediction Using Statistical Methods (motivated Beginner + Advanced Tracks) "],["whats-next-in-your-data-science-career.html", "7 Whats Next in Your Data Science Career? 7.1 Data Science in General 7.2 R 7.3 Python", " 7 Whats Next in Your Data Science Career? 7.1 Data Science in General Version Control with Git Advice for Non-Traditional Data Scientists Learn from Great Data Scientists on Kaggle -&gt; add towardsdatascience 7.2 R Install R and RStudio Locally RStudio.Cloud is great for getting started with R without having to worry about installing anything locally. Sooner or later you will have to install everything on your own computer. Heres a DataCamp tutorial on how to do that. Version Control with Git RStudio has a nice interface that lets you enjoy the perks of Git without ever having to touch the command line  sounds great, does it? Learn how to set up the Git &amp; R workflow with Happy Git with R. R Graph Gallery Get inspiration to take your plotting to the next level. Includes code to reproduce the plots. Follow the R Master Himself and the R Community Hadley Wickham was and continues to be extremely influential on the development of R and its rise to one of the most popular data science languages. Hes behind many tools that we taught you in this semester, especially the tidyverse (including great packages such as ggplot2 and dplyr). Follow him on Twitter to get great R advice and keep up to speed with everything new to R. Following the many people behind R (not only Hadley) is a great way for acquiring deeper understanding of the language and its developments. Join the Campus useR Group in Frankfurt Theres a quite active R community in Frankfurt that meets once a month. Its open for students, professors, industry practitioners, journalists, and all people that love to use R. In those meetings, youll hear about others work, discuss new developments, and ask questions. Listen to R Podcasts Another great way to easily keep up with new developments in the Data Science/R community. Check out Not So Standard Deviations or the R-Podcast 7.3 Python Install Python Locally Until now youve only programmed using JupyterHub on the TechAcademy Server. A next step would be to install Python and Jupyter locally on your computer. This link contains the necessary information on how to install the software on Windows, iOS or Linux. Choosing the Right Editor Using Jupyter is especially useful for short data analyses. But sometimes you want to write longer scripts in Python. In these cases, it is often more convenient to use a code editor instead of Jupyter. This tutorial highlights the positive aspects of such an editor and how to choose the right one for you. Pro-Tip: Also check out the other tutorials on Real Python and check out the Community Version of PyCharm which is the most common Python IDE (Integrated Development Environment. Python Graph Gallery Get inspiration to take your plotting to the next level. Includes code to reproduce the plots. More Advanced Python Concepts You know the basic data structures in Python like lists and dictionaries. What are the next steps to improve your knowledge? This website gives good explanations for slightly more advanced concepts which can be very useful from time to time. A Deeper Understanding If you want to get a deeper understanding of the Python programming language and into typical algorithms which are used in the field of Data Science, this free book can be a good starting point. Writing Beautiful Python Code My code doesnt look nice, but it works! This might work for yourself, but often you will work on code with other people. But even if youre just coding for yourself its a good idea to follow the PEP8 style guide. Its a useful convention on how to structure and code in Python. Youll find useful resources for PEP8 here and here. Listen to Python Podcasts When you dont have time for books you can listen to Talk Python or the Python Podcast. "],["404.html", "Page not found", " Page not found The page you requested cannot be found (perhaps it was moved or renamed). You may want to try searching to find the page's new location, or use the table of contents to find the page you are looking for. "]]
